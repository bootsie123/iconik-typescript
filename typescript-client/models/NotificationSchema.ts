/**
 * Iconik
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class NotificationSchema {
    'context'?: any;
    'dateCreated'?: Date;
    'dateModified'?: Date;
    'eventType': string;
    'excludeUsers'?: Array<string> | null;
    'id'?: string;
    'messageLong': string;
    'messageShort': string;
    'objectId': string;
    'objectType': string;
    'recipientId': string;
    'senderId': string;
    'shareId'?: string;
    'shareUserId'?: string;
    'status'?: NotificationSchemaStatusEnum;
    'subObjectId'?: string;
    'subObjectType'?: string;
    'systemDomainId'?: string;
    'userId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "context",
            "baseName": "context",
            "type": "any",
            "format": ""
        },
        {
            "name": "dateCreated",
            "baseName": "date_created",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "dateModified",
            "baseName": "date_modified",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "eventType",
            "baseName": "event_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "excludeUsers",
            "baseName": "exclude_users",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "messageLong",
            "baseName": "message_long",
            "type": "string",
            "format": ""
        },
        {
            "name": "messageShort",
            "baseName": "message_short",
            "type": "string",
            "format": ""
        },
        {
            "name": "objectId",
            "baseName": "object_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "objectType",
            "baseName": "object_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "recipientId",
            "baseName": "recipient_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "senderId",
            "baseName": "sender_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "shareId",
            "baseName": "share_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "shareUserId",
            "baseName": "share_user_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "NotificationSchemaStatusEnum",
            "format": ""
        },
        {
            "name": "subObjectId",
            "baseName": "sub_object_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "subObjectType",
            "baseName": "sub_object_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "systemDomainId",
            "baseName": "system_domain_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "userId",
            "baseName": "user_id",
            "type": "string",
            "format": "uuid"
        }    ];

    static getAttributeTypeMap() {
        return NotificationSchema.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum NotificationSchemaStatusEnum {
    Queued = 'QUEUED',
    Sent = 'SENT',
    Read = 'READ'
}

