/**
 * Iconik
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class WatchFolderVideoTranscoderSchema {
    'createWebProxyFromEditProxy'?: boolean;
    'editProxyLocalStoragePath'?: string;
    'editProxyUploadStorageId'?: string;
    'editProxyUploadStoragePath'?: string;
    'excludePatterns'?: Array<string>;
    'fileGrowThreshold': number;
    'includePatterns'?: Array<string>;
    'keepAsEditProxy'?: boolean;
    'keyframeFolderName': string;
    'keyframeMapFolderName': string;
    'local'?: boolean;
    'proxyFolderName': string;
    'proxyTimeout'?: number;
    /**
    * If enabled a soft link is used to add original to the watch folder, if disabled a hard link is used with a fallback to copy.
    */
    'useSymlink'?: boolean;
    /**
    * A sub-folder is created with a unique name inside the watch folder per job.
    */
    'useUniqueSubFolderWorkflow'?: boolean;
    'watchFolderLocation': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "createWebProxyFromEditProxy",
            "baseName": "create_web_proxy_from_edit_proxy",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "editProxyLocalStoragePath",
            "baseName": "edit_proxy_local_storage_path",
            "type": "string",
            "format": ""
        },
        {
            "name": "editProxyUploadStorageId",
            "baseName": "edit_proxy_upload_storage_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "editProxyUploadStoragePath",
            "baseName": "edit_proxy_upload_storage_path",
            "type": "string",
            "format": ""
        },
        {
            "name": "excludePatterns",
            "baseName": "exclude_patterns",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "fileGrowThreshold",
            "baseName": "file_grow_threshold",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "includePatterns",
            "baseName": "include_patterns",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "keepAsEditProxy",
            "baseName": "keep_as_edit_proxy",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "keyframeFolderName",
            "baseName": "keyframe_folder_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "keyframeMapFolderName",
            "baseName": "keyframe_map_folder_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "local",
            "baseName": "local",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "proxyFolderName",
            "baseName": "proxy_folder_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "proxyTimeout",
            "baseName": "proxy_timeout",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "useSymlink",
            "baseName": "use_symlink",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "useUniqueSubFolderWorkflow",
            "baseName": "use_unique_sub_folder_workflow",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "watchFolderLocation",
            "baseName": "watch_folder_location",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return WatchFolderVideoTranscoderSchema.attributeTypeMap;
    }

    public constructor() {
    }
}

