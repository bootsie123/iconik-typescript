/**
 * Iconik
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApprovalBySchema } from '../models/ApprovalBySchema';
import { User } from '../models/User';
import { HttpFile } from '../http/http';

export class ApprovalSchema {
    'approvalsBy'?: Array<ApprovalBySchema> | null;
    'changeDate'?: Date;
    'externals'?: Array<string>;
    'groups'?: Array<string>;
    'minNumber'?: number;
    'objectId'?: string;
    'objectType'?: string;
    'requestDate'?: Date;
    'requestedBy'?: string;
    'shareId'?: string | null;
    'status'?: ApprovalSchemaStatusEnum;
    'userStatus'?: ApprovalSchemaUserStatusEnum | null;
    'users'?: Array<string>;
    'usersInfo'?: Array<User>;
    'versionId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "approvalsBy",
            "baseName": "approvals_by",
            "type": "Array<ApprovalBySchema>",
            "format": ""
        },
        {
            "name": "changeDate",
            "baseName": "change_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "externals",
            "baseName": "externals",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "groups",
            "baseName": "groups",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "minNumber",
            "baseName": "min_number",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "objectId",
            "baseName": "object_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "objectType",
            "baseName": "object_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "requestDate",
            "baseName": "request_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "requestedBy",
            "baseName": "requested_by",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "shareId",
            "baseName": "share_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "ApprovalSchemaStatusEnum",
            "format": ""
        },
        {
            "name": "userStatus",
            "baseName": "user_status",
            "type": "ApprovalSchemaUserStatusEnum",
            "format": ""
        },
        {
            "name": "users",
            "baseName": "users",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "usersInfo",
            "baseName": "users_info",
            "type": "Array<User>",
            "format": ""
        },
        {
            "name": "versionId",
            "baseName": "version_id",
            "type": "string",
            "format": "uuid"
        }    ];

    static getAttributeTypeMap() {
        return ApprovalSchema.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum ApprovalSchemaStatusEnum {
    NA = 'N/A',
    Requested = 'REQUESTED',
    Approved = 'APPROVED',
    NotApproved = 'NOT_APPROVED',
    Mixed = 'MIXED'
}
export enum ApprovalSchemaUserStatusEnum {
    NA = 'N/A',
    Requested = 'REQUESTED',
    Approved = 'APPROVED',
    NotApproved = 'NOT_APPROVED',
    Mixed = 'MIXED'
}

