/**
 * Iconik
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DrawingSchema } from '../models/DrawingSchema';
import { TranscriptionType } from '../models/TranscriptionType';
import { User } from '../models/User';
import { HttpFile } from '../http/http';

export class SegmentBaseSchema {
    'assetId'?: string;
    'dateCreated'?: Date;
    'dateModified'?: Date;
    'drawing'?: DrawingSchema;
    'externalId'?: string | null;
    'id'?: string;
    'keyframeId'?: string | null;
    'metadata'?: any;
    'metadataViewId'?: string | null;
    'parentId'?: string;
    'path'?: string;
    'segmentChecked'?: boolean;
    'segmentColor'?: string;
    'segmentText'?: string | null;
    'segmentTrack'?: string | null;
    'segmentType': SegmentBaseSchemaSegmentTypeEnum;
    'shareUserEmail'?: string | null;
    'status'?: SegmentBaseSchemaStatusEnum;
    'subclipId'?: string;
    'timeEndMilliseconds'?: number | null;
    'timeStartMilliseconds'?: number | null;
    'topLevel'?: boolean;
    'transcription'?: TranscriptionType;
    'transcriptionId'?: string | null;
    'userFirstName'?: string;
    'userId'?: string;
    'userInfo'?: User;
    'userLastName'?: string;
    'userPhoto'?: string;
    'versionId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "assetId",
            "baseName": "asset_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "dateCreated",
            "baseName": "date_created",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "dateModified",
            "baseName": "date_modified",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "drawing",
            "baseName": "drawing",
            "type": "DrawingSchema",
            "format": ""
        },
        {
            "name": "externalId",
            "baseName": "external_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "keyframeId",
            "baseName": "keyframe_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "metadataViewId",
            "baseName": "metadata_view_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "parentId",
            "baseName": "parent_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "path",
            "baseName": "path",
            "type": "string",
            "format": ""
        },
        {
            "name": "segmentChecked",
            "baseName": "segment_checked",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "segmentColor",
            "baseName": "segment_color",
            "type": "string",
            "format": ""
        },
        {
            "name": "segmentText",
            "baseName": "segment_text",
            "type": "string",
            "format": ""
        },
        {
            "name": "segmentTrack",
            "baseName": "segment_track",
            "type": "string",
            "format": ""
        },
        {
            "name": "segmentType",
            "baseName": "segment_type",
            "type": "SegmentBaseSchemaSegmentTypeEnum",
            "format": ""
        },
        {
            "name": "shareUserEmail",
            "baseName": "share_user_email",
            "type": "string",
            "format": "email"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "SegmentBaseSchemaStatusEnum",
            "format": ""
        },
        {
            "name": "subclipId",
            "baseName": "subclip_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "timeEndMilliseconds",
            "baseName": "time_end_milliseconds",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "timeStartMilliseconds",
            "baseName": "time_start_milliseconds",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "topLevel",
            "baseName": "top_level",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "transcription",
            "baseName": "transcription",
            "type": "TranscriptionType",
            "format": ""
        },
        {
            "name": "transcriptionId",
            "baseName": "transcription_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "userFirstName",
            "baseName": "user_first_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "userId",
            "baseName": "user_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "userInfo",
            "baseName": "user_info",
            "type": "User",
            "format": ""
        },
        {
            "name": "userLastName",
            "baseName": "user_last_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "userPhoto",
            "baseName": "user_photo",
            "type": "string",
            "format": ""
        },
        {
            "name": "versionId",
            "baseName": "version_id",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SegmentBaseSchema.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum SegmentBaseSchemaSegmentTypeEnum {
    Marker = 'MARKER',
    Qc = 'QC',
    Generic = 'GENERIC',
    Comment = 'COMMENT',
    Tag = 'TAG',
    Transcription = 'TRANSCRIPTION',
    Scene = 'SCENE',
    Person = 'PERSON'
}
export enum SegmentBaseSchemaStatusEnum {
    Active = 'ACTIVE',
    Deleted = 'DELETED'
}

